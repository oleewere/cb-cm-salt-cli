/*
 * Cloudera Manager API
 *
 * <h1>Cloudera Manager API v32</h1>       <p>Introduced in Cloudera Manager 6.2.0</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>
 *
 * API version: 6.2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cm-api-client

// Metadata for a time series.
type ApiTimeSeriesMetadata struct {
	// The metric name for the time series.
	MetricName string `json:"metricName,omitempty"`
	// The display name for the entity associated with this time series. For example, if this was a time series for an HDFS service the entity name might be something like \"My HDFS Service\". If it was for a host it might be something like \"myhost.mysite.com\".
	EntityName string `json:"entityName,omitempty"`
	// The start time for the time series.
	StartTime string `json:"startTime,omitempty"`
	// The end time for the time series.
	EndTime string `json:"endTime,omitempty"`
	// The attributes for the time series. Note that the entityName entry in this map is not the same as the entityName field in this ApiTimeSeriesMetadata. The entityName entry in this map is a unique identifier for the entity and not the name displayed in the UI.  For example, if this was a time series for the YARN Job History Server the entityName entry in this map might be something like \"yarn-JOBHISTORY-6bd17ceb1489aae93fef4c867350d0dd\"
	Attributes map[string]string `json:"attributes,omitempty"`
	// The numerators of the units for the time series.
	UnitNumerators []string `json:"unitNumerators,omitempty"`
	// The denominators of the units for the time series.
	UnitDenominators []string `json:"unitDenominators,omitempty"`
	// The tsquery expression that could be used to extract just this stream.
	Expression string `json:"expression,omitempty"`
	// The alias for this stream's metric. Aliases correspond to use of the 'as' keyword in the tsquery.
	Alias string `json:"alias,omitempty"`
	// The minimum frequency at which the underlying metric for this stream is collected. Note that this can be null if the stream returns irregularly sampled data.
	MetricCollectionFrequencyMs float32 `json:"metricCollectionFrequencyMs,omitempty"`
	// The aggregate rollup for the returned data. This can be TEN_MINUTELY, HOURLY, SIX_HOURLY, DAILY, or WEEKLY.
	RollupUsed string `json:"rollupUsed,omitempty"`
}
