/*
 * Cloudera Manager API
 *
 * <h1>Cloudera Manager API v32</h1>       <p>Introduced in Cloudera Manager 6.2.0</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>
 *
 * API version: 6.2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cm-api-client

// Replication arguments for Hive services.
type ApiHiveReplicationArguments struct {
	// The service to replicate from.
	SourceService *ApiServiceRef `json:"sourceService,omitempty"`
	// Filters for tables to include in the replication. Optional. If not provided, include all tables in all databases.
	TableFilters []ApiHiveTable `json:"tableFilters,omitempty"`
	// Directory, in the HDFS service where the target Hive service's data is stored, where the export file will be saved. Optional. If not provided, Cloudera Manager will pick a directory for storing the data.
	ExportDir string `json:"exportDir,omitempty"`
	// Whether to force overwriting of mismatched tables.
	Force bool `json:"force,omitempty"`
	// Whether to replicate table data stored in HDFS. <p/> If set, the \"hdfsArguments\" property must be set to configure the HDFS replication job.
	ReplicateData bool `json:"replicateData,omitempty"`
	// Arguments for the HDFS replication job. <p/> This must be provided when choosing to replicate table data stored in HDFS. The \"sourceService\", \"sourcePath\" and \"dryRun\" properties of the HDFS arguments are ignored; their values are derived from the Hive replication's information. <p/> The \"destinationPath\" property is used slightly differently from the usual HDFS replication jobs. It is used to map the root path of the source service into the target service. It may be omitted, in which case the source and target paths will match. <p/> Example: if the destination path is set to \"/new_root\", a \"/foo/bar\" path in the source will be stored in \"/new_root/foo/bar\" in the target.
	HdfsArguments *ApiHdfsReplicationArguments `json:"hdfsArguments,omitempty"`
	// Whether to replicate the impala metadata. (i.e. the metadata for impala UDFs and their corresponding binaries in HDFS).
	ReplicateImpalaMetadata bool `json:"replicateImpalaMetadata,omitempty"`
	// Whether to run invalidate metadata query or not
	RunInvalidateMetadata bool `json:"runInvalidateMetadata,omitempty"`
	// Whether to perform a dry run. Defaults to false.
	DryRun bool `json:"dryRun,omitempty"`
	// Number of threads to use in multi-threaded export/import phase
	NumThreads float32 `json:"numThreads,omitempty"`
}
