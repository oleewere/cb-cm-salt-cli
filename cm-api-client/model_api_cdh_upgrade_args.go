/*
 * Cloudera Manager API
 *
 * <h1>Cloudera Manager API v32</h1>       <p>Introduced in Cloudera Manager 6.2.0</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>
 *
 * API version: 6.2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cm-api-client

// Arguments used for the CDH Upgrade command.
type ApiCdhUpgradeArgs struct {
	// If using parcels, the full version of an already distributed parcel for the next major CDH version. Default is null, which indicates this is a package upgrade. Example versions are: '5.0.0-1.cdh5.0.0.p0.11' or '5.0.2-1.cdh5.0.2.p0.32'
	CdhParcelVersion string `json:"cdhParcelVersion,omitempty"`
	// If using packages, the full version of the CDH packages being upgraded to, such as \"5.1.2\". These packages must already be installed on the cluster before running the upgrade command. For backwards compatibility, if \"5.0.0\" is specified here, then the upgrade command will relax validation of installed packages to match v6 behavior, only checking major version. <p> Introduced in v9. Has no effect in older API versions, which assume \"5.0.0\"
	CdhPackageVersion string `json:"cdhPackageVersion,omitempty"`
	// If provided and rolling restart is available, will perform rolling restart with the requested arguments. If provided and rolling restart is not available, errors. If omitted, will do a regular restart. <p> Introduced in v9. Has no effect in older API versions, which must always do a hard restart.
	RollingRestartArgs *ApiRollingUpgradeClusterArgs `json:"rollingRestartArgs,omitempty"`
	// Not used starting in v9 - Client config is always deployed as part of upgrade. For older versions, determines whether client configuration should be deployed as part of upgrade. Default is true.
	DeployClientConfig bool `json:"deployClientConfig,omitempty"`
	// Not used starting in v9 - All servies are always started as part of upgrade. For older versions, determines whether all services should be started should be deployed as part of upgrade. Default is true.
	StartAllServices bool `json:"startAllServices,omitempty"`
}
