/*
 * Cloudera Manager API
 *
 * <h1>Cloudera Manager API v32</h1>       <p>Introduced in Cloudera Manager 6.2.0</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>
 *
 * API version: 6.2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cm-client

// The ApiParcelState encapsulates the state of a parcel while it is in transition and reports any errors that may have occurred.. <p> The complete progress of a parcel is broken up into two different reporting indicators - progress and count. Progress is the primary indicator that reports the global state of transitions. For example, when downloading, progress and totalProgress will show the current number of bytes downloaded and the total number of bytes needed to be downloaded respectively. </p> <p> The count and totalCount indicator is used when a state transition affects multiple hosts. The count and totalCount show the current number of hosts completed and the total number of hosts respectively. For example, during distribution, the progress and totalProgress will show how many bytes have been transferred to each host and the count will indicate how many hosts of of totalCount have had parcels unpacked. </p> <p> Along with the two progress indicators, the ApiParcelState shows both errors and warnings that may have turned up during a state transition. </p>
type ApiParcelState struct {
	// The progress of the state transition.
	Progress float32 `json:"progress,omitempty"`
	// The total amount that #getProgress() needs to get to.
	TotalProgress float32 `json:"totalProgress,omitempty"`
	// The current hosts that have completed.
	Count float32 `json:"count,omitempty"`
	// The total amount that #getCount() needs to get to.
	TotalCount float32 `json:"totalCount,omitempty"`
	// The errors that exist for this parcel.
	Errors []string `json:"errors,omitempty"`
	// The warnings that exist for this parcel.
	Warnings []string `json:"warnings,omitempty"`
}
