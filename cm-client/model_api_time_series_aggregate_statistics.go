/*
 * Cloudera Manager API
 *
 * <h1>Cloudera Manager API v32</h1>       <p>Introduced in Cloudera Manager 6.2.0</p>       <p><a href=\"http://www.cloudera.com/documentation.html\">Cloudera Product Documentation</a></p>
 *
 * API version: 6.2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cm-client

// Statistics related to one time series aggregate data point. It is available from v6 for data points containing aggregate data. It includes further statistics about the data point. An aggregate can be across entities (e.g., fd_open_across_datanodes), over time (e.g., a daily point for the fd_open metric for a specific DataNode), or both (e.g., a daily point for the fd_open_across_datanodes metric). If the data point is for non-aggregate date this will return null.
type ApiTimeSeriesAggregateStatistics struct {
	// The timestamp of the sample data point. Note that the timestamp reflects coordinated universal time (UTC) and not necessarily the server's time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
	SampleTime string `json:"sampleTime,omitempty"`
	// The sample data point value representing an actual sample value picked from the underlying data that is being aggregated.
	SampleValue float32 `json:"sampleValue,omitempty"`
	// The number of individual data points aggregated in this data point.
	Count float32 `json:"count,omitempty"`
	// This minimum value encountered while producing this aggregate data point. If this is a cross-time aggregate then this is the minimum value encountered during the aggregation period. If this is a cross-entity aggregate then this is the minimum value encountered across all entities. If this is a cross-time, cross-entity aggregate, then this is the minimum value for any entity across the aggregation period.
	Min float32 `json:"min,omitempty"`
	// The timestamp of the minimum data point. Note that the timestamp reflects coordinated universal time (UTC) and not necessarily the server's time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
	MinTime string `json:"minTime,omitempty"`
	// This maximum value encountered while producing this aggregate data point. If this is a cross-time aggregate then this is the maximum value encountered during the aggregation period. If this is a cross-entity aggregate then this is the maximum value encountered across all entities. If this is a cross-time, cross-entity aggregate, then this is the maximum value for any entity across the aggregation period.
	Max float32 `json:"max,omitempty"`
	// The timestamp of the maximum data point. Note that the timestamp reflects coordinated universal time (UTC) and not necessarily the server's time zone. The rest API formats the UTC timestamp as an ISO-8061 string.
	MaxTime string `json:"maxTime,omitempty"`
	// The mean of the values of all data-points for this aggregate data point.
	Mean float32 `json:"mean,omitempty"`
	// The standard deviation of the values of all data-points for this aggregate data point.
	StdDev float32 `json:"stdDev,omitempty"`
	// If the data-point is for a cross entity aggregate (e.g., fd_open_across_datanodes) returns the cross entity metadata, null otherwise.
	CrossEntityMetadata *ApiTimeSeriesCrossEntityMetadata `json:"crossEntityMetadata,omitempty"`
}
